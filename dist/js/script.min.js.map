{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/nodelist-foreach-polyfill/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/js/main.js","webpack:///./src/js/modules/form.js","webpack:///./src/js/modules/maskTelNumber.js"],"names":["window","addEventListener","form","mask","forms","document","querySelectorAll","inputs","postData","url","data","fetch","method","body","res","text","clearInputs","forEach","item","value","length","e","preventDefault","formReq","formRemoveError","error","formValidate","formData","FormData","then","console","log","selector","index","input","placeholder","getAttribute","classList","contains","emailTest","formAddError","checked","parentElement","add","remove","test","setCursorPosition","pos","elem","focus","setSelectionRange","createTextRange","range","collapse","moveEnd","moveStart","select","createMask","event","matrix","i","def","replace","val","a","charAt","type","cur","selectionStart"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACrCA,iBAAiB,mBAAO,CAAC,0EAAqB;;;;;;;;;;;;ACA9C;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,KAA0B,oBAAoB,SAAE;AAClD;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3uBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,YAAM;AAC9C;;AAEAC,+DAAI;AACJC,wEAAI;AAEP,CAND,E;;;;;;;;;;;;;;;;;;;;ACNA,IAAMD,IAAI,GAAG,SAAPA,IAAO,GAAM;AAClB,MAAME,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,MAA1B,CAAd;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAf,CAFkB,CAIlB;;AACA,MAAME,QAAQ;AAAA,mLAAG,iBAAOC,GAAP,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","file":"script.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = require(\"regenerator-runtime\");\n","if (window.NodeList && !NodeList.prototype.forEach) {\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import 'nodelist-foreach-polyfill';\r\n\r\nimport form from './modules/form';\r\nimport mask from './modules/maskTelNumber';\r\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    'use strict';\r\n\r\n    form();\r\n    mask();\r\n    \r\n});","const form = () => {\r\n\tconst forms = document.querySelectorAll('form');\r\n\tconst inputs = document.querySelectorAll('input');\r\n\r\n\t//==============Настройка отправки формы===================\r\n\tconst postData = async (url, data) => {\r\n\t\tlet res = await fetch(url, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: data\r\n\t\t});\t\r\n\t\treturn await res.text();\r\n\t};\r\n\t//=========================================================\r\n\tconst clearInputs = () => {\r\n        inputs.forEach(item => {\r\n            item.value = '';\r\n        });\r\n    };\r\n\r\n\tif (forms.length > 0) {\r\n\t\tforms.forEach(item => {\r\n\t\t\titem.addEventListener('submit', (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tlet formReq = item.querySelectorAll('.req');\r\n\t\t\t\tformRemoveError(formReq);\r\n\t\t\t\tlet error = formValidate(formReq);\r\n\t\t\t\tif (error === 0) {\r\n\t\t\t\t\t//=========FormData=====================================\r\n\t\t\t\t\tconst formData = new FormData(item);\r\n\t\t\t\t\t// formData.append('image', formImage.files[0]);\r\n\t\t\t\t\t//Добавить данные к отправке из других окон (не формы)\r\n\t\t\t\t\t// if (item.getAttribute('data-calc') === \"end\") { \r\n\t\t\t\t\t// \tlet val = costBlock.innerHTML;\r\n\t\t\t\t\t// \tlet obj = {\r\n\t\t\t\t\t// \t\tcost: val\r\n\t\t\t\t\t// \t};\r\n\t\t\t\t\t// \tconsole.log(obj);\r\n\t\t\t\t\t// \tfor (let key in obj) {\r\n\t\t\t\t\t// \t\tformData.append(key, obj[key]);\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t//======================================================\r\n\t\t\t\t\tpostData('../server.php', formData)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconsole.log(res); //!убрать\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(() => {\r\n\t\t\t\t\t\tclearInputs();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Валидация формы\r\n\t\t\r\n\tfunction formValidate(selector) {\r\n\t\tlet error = 0;\r\n\t\tif (selector.length > 0) {\r\n\t\t\tfor (let index = 0; index < selector.length; index++) {\r\n\t\t\t\tconst input = selector[index];\r\n\t\t\t\tlet placeholder = input.getAttribute('placeholder');\r\n\t\t\t\tif (input.classList.contains('email')) {\r\n\t\t\t\t\tif (emailTest(input) || input.value == placeholder) {\r\n\t\t\t\t\t\tformAddError(input);\r\n\t\t\t\t\t\terror++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (input.getAttribute(\"type\") === \"checkbox\" && input.checked === false) {\r\n\t\t\t\t\tformAddError(input);\r\n\t\t\t\t\terror++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (input.value == '' || input.value == placeholder) {\r\n\t\t\t\t\t\tformAddError(input);\r\n\t\t\t\t\t\terror++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn error;\r\n\t}\r\n\r\n\tfunction formAddError(item) {\r\n\t\titem.parentElement.classList.add('error');\r\n\t\titem.classList.add('error');\r\n\t}\r\n\tfunction formRemoveError(selector) {\r\n\t\tif (selector.length > 0) {\r\n\t\t\tfor (let index = 0; index < selector.length; index++) {\r\n\t\t\t\tconst input = selector[index];\r\n\t\t\t\tinput.parentElement.classList.remove('error');\r\n\t\t\t\tinput.classList.remove('error');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction emailTest(input) {\r\n\t\treturn !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(input.value);\r\n\t}\r\n}\r\nexport default form;","//* Масска ввода номера телефона\r\n// добавить класс tel к инпуту с маской телефона\r\nconst mask = () => {\r\n    let setCursorPosition = (pos, elem) => {\r\n        elem.focus();\r\n        // если у данного импута есть метод setSelectionRange(современные браузеры), то начальное и конечное значение выделения строки будут равны количествусимволов (т.е 2 - это +7), соответственно курсор встанет после +7, для старых браузеров применяется метод createTextRange\r\n        if (elem.setSelectionRange) {\r\n            elem.setSelectionRange(pos, pos);\r\n        } else if (elem.createTextRange) {\r\n            let range = elem.createTextRange();\r\n\r\n            range.collapse(true);\r\n            range.moveEnd('character', pos);\r\n            range.moveStart('character', pos);\r\n            range.select();\r\n        }\r\n    };\r\n    function createMask(event) {\r\n        let matrix = '+7 (___) ___ __ __',\r\n            i = 0,\r\n            def = matrix.replace(/\\D/g, ''),\r\n            val = this.value.replace(/\\D/g, '');\r\n        // нельзя удалить +7, т.е если длина вводимых значений будет меньше маски, то вернется маска\r\n        if (def.length >= val.length) {\r\n            val = def;\r\n        }\r\n        // при вводе в инпут значения в маске(матрице) заменяются (с помощью функции) согласно заданным условиям\r\n        this.value = matrix.replace(/./g, function(a) {\r\n            return /[_\\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? '' : a;\r\n        });\r\n        // если тип события (event.type) - потеря фокуса(blur), и только 2 знака (+7), то ввод(маска) отменяется\r\n        // в ином случае выполняется функция setCursorPosition\r\n        if (event.type ==='blur') {\r\n            if (this.value.length == 2 || this.value.length < matrix.length) {\r\n                this.value = '';\r\n            }\r\n        } else if (event.type ==='keyup' || event.type ==='mouseup') {\r\n            let cur = this.selectionStart;\r\n            if (cur == '0') {\r\n                setCursorPosition(this.value.length, this);\r\n            }\r\n        } else {\r\n            setCursorPosition(this.value.length, this);        \r\n        }\r\n    }\r\n    let inputs = document.querySelectorAll('.tel');\r\n    inputs.forEach(input => {\r\n        input.addEventListener('input', createMask);\r\n        input.addEventListener('focus', createMask);\r\n        input.addEventListener('blur', createMask);\r\n        input.addEventListener('keyup', createMask);\r\n        input.addEventListener('mouseup', createMask);\r\n    });\r\n};\r\nexport default mask;"],"sourceRoot":""}